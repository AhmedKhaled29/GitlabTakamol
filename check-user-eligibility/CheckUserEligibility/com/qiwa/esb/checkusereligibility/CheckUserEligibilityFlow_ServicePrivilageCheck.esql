BROKER SCHEMA com.qiwa.esb.checkusereligibility
PATH Qiwa.Framework.Lib;      


CREATE COMPUTE MODULE CheckUserEligibilityFlow_ServicePrivilageCheck
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		   -- coping the headers 
		  SET OutputRoot.Properties = Environment.Variables.Properties;
		  SET OutputRoot.MQMD = Environment.Variables.MQMD;
		  SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;  
		  -- preparing the output response 
		  DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.CheckUserEligibility.CheckUserEligibilityFlow.Variables;
		  DECLARE rInputHeader REFERENCE TO  Environment.Variables.Request.Header;  
		  CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		  CREATE FIRSTCHILD OF OutputRoot.XMLNSC.CheckUserEligibilityRs  NAME 'Header'; 
		  DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.CheckUserEligibilityRs.Header; 
		  -- If the user has a privilege on a subscription and on the service, which means that the user has a privilege to access
		  -- then a success code will be returned then exit the flow.
		IF Environment.Variables.Result = 0 AND Environment.Variables.Missing= 0 THEN  
          CALL Create_esbXML_Response_Header(GetESBSuccessCode(),rInputHeader,rOutHeaderRef);  
          -- If the user has a privilege on a subscription only with no privilege on the service return an error and exit the flow
		ELSEIF Environment.Variables.Result = -2 AND Environment.Variables.Missing= 0 THEN 
		  CALL Create_esbXML_Response_Header(loadedPropertiesRef.NO_Privilege_Error,rInputHeader,rOutHeaderRef);   
		  -- if there is a missing parameter 
		ELSEIF Environment.Variables.Missing= 1 THEN 
		 CALL Create_esbXML_Response_Header(loadedPropertiesRef.MissingParameter,rInputHeader,rOutHeaderRef);  
		  
		END IF; 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
