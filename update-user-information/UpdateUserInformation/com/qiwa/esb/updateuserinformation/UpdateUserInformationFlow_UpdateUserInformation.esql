BROKER SCHEMA com.qiwa.esb.updateuserinformation
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE UpdateUserInformationFlow_UpdateUserInformation
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		DECLARE loadProperitesRef REFERENCE TO Environment.Properties.UpdateUserInformation.UpdateUserInformationFlow.Variables;
	    
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.UpdateUserInformationRs NAME 'Header';
		CREATE LASTCHILD OF OutputRoot.XMLNSC.UpdateUserInformationRs NAME 'Body';
		
		DECLARE Inbody REFERENCE TO InputRoot.XMLNSC.UpdateUserInformationRq.Body;
		DECLARE outListRef REFERENCE TO OutputRoot.XMLNSC.UpdateUserInformationRs.Body;
		
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.UpdateUserInformationRs.Header;
		DECLARE rInputHeader REFERENCE TO InputRoot.XMLNSC.UpdateUserInformationRq.Header;
		 
		
		
		DECLARE IdNo CHARACTER Inbody.IdNo; 
 		DECLARE Name CHARACTER Inbody.Name;
 		DECLARE DateOfBirth INTEGER Inbody.DateOfBirth; 
 		DECLARE Email CHARACTER Inbody.Email;
 		DECLARE MobileNumber CHARACTER Inbody.MobileNumber;
 		DECLARE StatusId INTEGER Inbody.StatusId;
 		DECLARE NationalityId INTEGER Inbody.NationalityId;
 		DECLARE GenderId INTEGER Inbody.GenderId;
 		DECLARE ReligionId INTEGER Inbody.ReligionId;
 		DECLARE UserName CHARACTER Inbody.UserName;
 		DECLARE IdExpiryDate CHARACTER Inbody.IdExpiryDate;
 		DECLARE Password CHARACTER Inbody.Password;
 		DECLARE IsMobileVerified BOOLEAN Inbody.IsMobileVerified;
 		DECLARE IsEmailVerified BOOLEAN Inbody.IsEmailVerified; 
  
  		 
  		DECLARE user INT;
  		IF ((Inbody.IsEmailVerified IS NULL) OR (Inbody.IsEmailVerified = '')) AND (LENGTH(Inbody.Email)>0)THEN   
			CALL Create_esbXML_Response_Header(loadProperitesRef.MissingParameters, rInputHeader, rOutHeaderRef);	  
			RETURN TRUE; 
		END IF;  
			  
	 	SET user = Update_User  (	IdNo,
									Name,
									DateOfBirth,
									Email, 
									MobileNumber,
									StatusId,
									NationalityId,
									GenderId, 
									ReligionId,
									IdExpiryDate,
									UserName, 
									Password,
									IsMobileVerified,
									IsEmailVerified  );
		 
		IF user = 0 THEN
			CALL Create_esbXML_Response_Header(GetESBSuccessCode(), rInputHeader, rOutHeaderRef);
		ELSE
			CALL Create_esbXML_Response_Header(loadProperitesRef.NoUserUpdated, rInputHeader, rOutHeaderRef);
		END IF; 
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE Update_User (	IN IdNo CHARACTER,
									IN Name CHARACTER,
									IN DateOfBirth INTEGER,
									IN Email CHARACTER,
									IN Phone CHARACTER,
									IN StatusId INTEGER, 
									IN NationalityID INTEGER,
									IN GenderId INTEGER,
									IN ReligionId INTEGER,
									IN IDExpiryDate CHARACTER,
									IN UserName CHARACTER,
									IN Password CHARACTER,
									IN IsMobileVerified BOOLEAN,
									IN IsEmailVerified BOOLEAN )  
							 					
												  
	RETURNS INTEGER LANGUAGE DATABASE EXTERNAL NAME "dbo.Update_User"; 
    
    
END MODULE;
