BROKER SCHEMA com.qiwa.esb.getusereligibleservices


CREATE COMPUTE MODULE GetUserEligibleServicesFlow_CheckUserType
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyEntireMessage();
		CALL CopyMessageHeaders(); 
		DECLARE bodyRef REFERENCE TO InputRoot.XMLNSC.GetUserEligibleServicesRq.Body; 
		DECLARE rInputHeader REFERENCE TO InputRoot.XMLNSC.GetUserEligibleServicesRq.Header; 
		DECLARE loadProperitesRef REFERENCE TO Environment.Properties.GetUserEligibleServices.GetUserEligibleServicesFlow.Variables;
	    

		SET Environment.Variables.Properties = InputRoot.Properties;
		SET Environment.Variables.MQMD = InputRoot.MQMD;
		SET Environment.Variables.MQRFH2 = InputRoot.MQRFH2;
		SET Environment.Variables.XMLNSC = InputRoot.XMLNSC; 
		 
		CALL Check_UserType  (	CAST(bodyRef.IdNo AS CHAR), 
								CAST(bodyRef.LaborOfficeId AS INT),
								CAST(bodyRef.EstablishmentSequence AS INT) , 
								Environment.Variables.DB.UserType[]);
								
		DECLARE size INT CARDINALITY(Environment.Variables.DB.UserType[]) ; 						
		-- return user i entered with plus the owner in the unified
		--DP will take the two user ids 
		--IF ((Environment.Variables.DB.UserType.MLSDUserTypeId = 3) OR (Environment.Variables.DB.UserType.MLSDUserTypeId IS NULL ) OR (Environment.Variables.DB.UserType.MLSDUserTypeId = '')) AND (size>0) THEN
			
		--CALL HRSD DP
		IF Environment.Variables.DB.UserType.OwnerId IS NOT NULL THEN 
			SET OutputRoot.XMLNSC.data.Idno  = ''''||CAST(bodyRef.IdNo AS CHAR)||','||CAST(Environment.Variables.DB.UserType.OwnerId AS CHAR)||'''';    
		ELSE  
			SET OutputRoot.XMLNSC.data.Idno  = CAST(bodyRef.IdNo AS CHAR);   			
		END IF;
		SET OutputRoot.XMLNSC.data.UnifiedNumber  =CAST(Environment.Variables.DB.UserType.UnifiedNumber AS CHAR);       
		SET OutputLocalEnvironment.Destination.HTTP.RequestURL = loadProperitesRef.DBURL; 
		RETURN TRUE; 
--		ELSE 
--			-- SKIP DP, call Search sp Direcctly
--		 	PROPAGATE TO TERMINAL 'out1';
--		 	RETURN FALSE;
--		END IF; 
--		
		 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	 
	CREATE PROCEDURE Check_UserType (	IN IdNo CHARACTER,
												IN LaborOfficeId INTEGER,
												IN SequenceNumber INTEGER
												 )
							 					
												
	LANGUAGE DATABASE DYNAMIC RESULT SETS 1 
    EXTERNAL NAME "dbo.Check_UserType"; 
	
END MODULE;
