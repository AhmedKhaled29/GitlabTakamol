BROKER SCHEMA com.qiwa.esb.getsubscriptionsconfigurations
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE GetSubscriptionsConfigurationsRsFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	
		CALL CopyMessageHeaders();
		
		
		DECLARE inMSGRef REFERENCE TO InputRoot.XMLNSC.GetSubscriptionsConfigurationsRs;
		DECLARE inBodyRef REFERENCE TO inMSGRef.Body.*:*[<].*:*[<].*[<];
		-- declaring reference to the input root response body for the msg recieved from the odm adapter 
		CREATE LASTCHILD OF OutputRoot.XMLNSC.GetSubscriptionsConfigurationsRs NAME 'Body';
		DECLARE outBodyRef REFERENCE TO OutputRoot.XMLNSC.GetSubscriptionsConfigurationsRs.Body; 
		-- declaring reference to the output root response header getting out of the service  
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.GetSubscriptionsConfigurationsRs NAME 'Header'; 
		SET OutputRoot.XMLNSC.GetSubscriptionsConfigurationsRs.Header = inMSGRef.Header; 
		
		
		IF inMSGRef.Header.ResponseStatus.Code = GetESBSuccessCode() THEN
			
			DECLARE i INT 1;
			DECLARE inRefCount INT CARDINALITY(inBodyRef.SubscriptionsList.SubscriptionsItem[]);
			
			WHILE i <= inRefCount DO
				
				SET outBodyRef.SubscrptionsList.SubscrptionsItem[i].SubscriptionId 			  = inBodyRef.SubscriptionsList.SubscriptionsItem[i].SubscriptionId;
				SET outBodyRef.SubscrptionsList.SubscrptionsItem[i].SubscriptionPeriodInMonth = inBodyRef.SubscriptionsList.SubscriptionsItem[i].SubscriptionPeriodInMonth;
				SET outBodyRef.SubscrptionsList.SubscrptionsItem[i].SubscriptionPrice 		  = inBodyRef.SubscriptionsList.SubscriptionsItem[i].SubscriptionPrice;
				SET outBodyRef.SubscrptionsList.SubscrptionsItem[i].VAT				 		  = inBodyRef.SubscriptionsList.SubscriptionsItem[i].VAT;
				SET outBodyRef.SubscrptionsList.SubscrptionsItem[i].EstablishmentSize 		  = inBodyRef.SubscriptionsList.SubscriptionsItem[i].EstablishmentSize;
				
				SET i = i + 1;
			
			END WHILE;
		END IF;
	
	
		
	RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
