BROKER SCHEMA com.qiwa.esb.DeleteUser
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE DeleteUserMsgFlow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		-- TO access Input Queue Message
		DECLARE channelRequest REFERENCE TO InputRoot.XMLNSC.DeleteUserRq;
		
		-- TO Get Property file values
		DECLARE propertiesRef REFERENCE TO Environment.Properties.DeleteUser.DeleteUserMsgFlow;
		
		
		--TO Generaate  Output Message
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.DeleteUserRs NAME 'Header';
		CREATE LASTCHILD OF OutputRoot.XMLNSC.DeleteUserRs NAME 'Body';
		
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.DeleteUserRs.Header;
		DECLARE rInputHeader REFERENCE TO InputRoot.XMLNSC.DeleteUserRq.Header;
		
		DECLARE rOutBodyRef REFERENCE TO OutputRoot.XMLNSC.DeleteUserRs.Body;
		DECLARE RESULT INTEGER;
		DECLARE IdNo CHARACTER; 
		
		SET IdNo = channelRequest.Body.IdNo;
		SET RESULT = Delete_User(IdNo);
		
		IF RESULT = 0 THEN
				CALL Create_esbXML_Response_Header(GetESBSuccessCode(), rInputHeader, rOutHeaderRef); 
			ELSE
				CALL Create_esbXML_Response_Header( propertiesRef.Variables.IdDoesntExistError,rInputHeader, rOutHeaderRef);
		END IF;
		
--		SET rOutHeaderRef = rInputHeader;
--		SET rOutBodyRef = 'sample';
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

--	CREATE PROCEDURE CopyEntireMessage() BEGIN
--		SET OutputRoot = InputRoot;
--	END;

	--to call the db stored procedure
	CREATE PROCEDURE Delete_User(IN IdNo CHARACTER)									  
	RETURNS INTEGER LANGUAGE DATABASE EXTERNAL NAME "dbo.Delete_User";

END MODULE;
