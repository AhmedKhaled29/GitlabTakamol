BROKER SCHEMA com.qiwa.esb.renewusersubscription
PATH Qiwa.Framework.Lib;

CREATE COMPUTE MODULE AddorUpdateUserPrivilages_Resp
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		IF FIELDNAME(Environment.Variables) IS NULL THEN
			CREATE FIELD Environment.Variables;
		END IF;

		DECLARE EV REFERENCE TO Environment.Variables;
		
		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.RenewUserSubscription.RenewUserSubscriptionFlow;

		SET OutputRoot.Properties = EV.Properties;
		SET OutputRoot.MQMD = EV.MQMD;
		SET OutputRoot.MQRFH2 = EV.MQRFH2;

		DECLARE rInHeaderRef1 REFERENCE TO InputRoot.XMLNSC.AddOrUpdateUserPrivilegesRs.Header; 
		DECLARE rInBodyRef1 REFERENCE TO InputRoot.XMLNSC.AddOrUpdateUserPrivilegesRs.Body; 
		
		DECLARE rInHeaderRef REFERENCE TO EV.XMLNSC.RenewUserSubscriptionRq.Header; 
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.RenewUserSubscriptionRs NAME 'Header';
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.RenewUserSubscriptionRs.Header;  
	
		IF rInHeaderRef1.ResponseStatus.Code = GetESBSuccessCode() THEN 
			CALL Create_esbXML_Response_Header(GetESBSuccessCode(),rInHeaderRef,rOutHeaderRef);
		ELSEIF EV.EstsCompare	=	TRUE AND rInHeaderRef1.ResponseStatus.Code = GetESBSuccessCode() THEN --2- renew partial, add success 
			CALL Create_esbXML_Response_Header(loadedPropertiesRef.Variables.RenewParAddPrivSuccError,rInHeaderRef,rOutHeaderRef);
		ELSEIF EV.EstsCompare	=	FALSE AND rInHeaderRef1.ResponseStatus.Code <> GetESBSuccessCode() AND EXISTS(rInBodyRef1.EstablishmentsInfoList.EstablishmentsInfoItem[]) THEN --3- Renew success, Add Partial  
			CALL Create_esbXML_Response_Header(loadedPropertiesRef.Variables.RenewSuccAddPrivParError,rInHeaderRef,rOutHeaderRef);
		ELSEIF EV.EstsCompare	=	TRUE AND rInHeaderRef1.ResponseStatus.Code <> GetESBSuccessCode() AND EXISTS(rInBodyRef1.EstablishmentsInfoList.EstablishmentsInfoItem[]) THEN --4- renew partial, add partial
			CALL Create_esbXML_Response_Header(loadedPropertiesRef.Variables.RenewParAddPrivParError,rInHeaderRef,rOutHeaderRef);
		ELSE					 																				--5- add error
			CALL Create_esbXML_Response_Header(rInHeaderRef1.ResponseStatus.Code,rInHeaderRef,rOutHeaderRef); 
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;