

CREATE COMPUTE MODULE getEstabInfoMlsd_CallEstabInfo
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE bodyRef REFERENCE TO Environment.Variables.XMLNSC.AddOrUpdateUserPrivilegesRq.Body; 
		DECLARE rInputHeader REFERENCE TO Environment.Variables.XMLNSC.AddOrUpdateUserPrivilegesRq.Header; 
		DECLARE channel CHAR Environment.Properties.AddOrUpdateUserPrivileges.AddOrUpdateUserPrivilegesFlow.Variables.ChannelID; 
		DECLARE code CHAR Environment.Properties.AddOrUpdateUserPrivileges.AddOrUpdateUserPrivilegesFlow.Variables.getUnified;
		   

		SET OutputRoot.Properties = Environment.Variables.Properties ;
		SET OutputRoot.MQMD =  Environment.Variables.MQMD  ;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;  
		
		CREATE LASTCHILD OF OutputRoot DOMAIN ('XMLNSC');
		
		SET OutputRoot.XMLNSC.GetEstablishmentsUnifiedNumberMLSDRq.Header = rInputHeader;   
		  
		DECLARE rOutputHeader REFERENCE TO OutputRoot.XMLNSC.GetEstablishmentsUnifiedNumberMLSDRq.Header;      
		 
		CREATE LASTCHILD OF OutputRoot.XMLNSC.GetEstablishmentsUnifiedNumberMLSDRq NAME 'Body';  
		DECLARE outRef REFERENCE TO OutputRoot.XMLNSC.GetEstablishmentsUnifiedNumberMLSDRq.Body;      
   
		 SET rOutputHeader.ServiceCode = code ;    
		 SET rOutputHeader.ChannelId = channel ;
		 
		DECLARE a INT 1;
	    DECLARE Count INT CARDINALITY(Environment.Variables.ActiveServicesItem.item[]); 
	    
	    WHILE a <= Count DO
	    		
			SET outRef.EstablishmentIdsList.EstablishmentIds[a] = Environment.Variables.ActiveServicesItem.item[a].EstabId;
	 		SET a = a+1; 
 		
	    END WHILE; 	 
	    
	    SET Environment.InternalServiceCaller.callCorrIDOffset = SUBSTRING(rInputHeader.TransactionId FROM 1 FOR 1) || '5';
		 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
