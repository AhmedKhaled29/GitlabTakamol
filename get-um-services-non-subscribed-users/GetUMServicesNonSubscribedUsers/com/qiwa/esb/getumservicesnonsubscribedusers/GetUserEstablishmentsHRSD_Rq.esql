BROKER SCHEMA com.qiwa.esb.getumservicesnonsubscribedusers
path Qiwa.Framework.Lib;


CREATE COMPUTE MODULE GetUserEstablishmentsHRSD_Rq
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();	
		--save the input message and headers
		SET Environment.Variables.Properties = InputRoot.Properties;
		SET Environment.Variables.MQMD = InputRoot.MQMD;
		SET Environment.Variables.MQRFH2 = InputRoot.MQRFH2;
		SET Environment.Variables.XMLNSC = InputRoot.XMLNSC;
		SET Environment.Variables.Request = InputRoot.XMLNSC.GetUMServicesNonSubscribedUsersRq;		
		--reference to request header and body
		DECLARE InHeaderRef REFERENCE TO InputRoot.XMLNSC.GetUMServicesNonSubscribedUsersRq.Header;
		DECLARE InBodyRef REFERENCE TO InputRoot.XMLNSC.GetUMServicesNonSubscribedUsersRq.Body;
		--Declare properties file
		IF EXISTS(Environment.Properties.GetUMServicesNonSubscribedUsers.HTTP_INT_GetUMServicesNonSubscribedUsersFlow[]) THEN 
			SET Environment.Properties.GetUMServicesNonSubscribedUsers.HTTP_GetUMServicesNonSubscribedUsersFlow=
			Environment.Properties.GetUMServicesNonSubscribedUsers.HTTP_INT_GetUMServicesNonSubscribedUsersFlow;
		END IF;
		DECLARE loadproperties REFERENCE TO Environment.Properties.GetUMServicesNonSubscribedUsers.HTTP_GetUMServicesNonSubscribedUsersFlow.Variables;	
		
		
		-- prepare call to GetUserEstablishmentsHRSD
		CREATE LASTCHILD OF OutputRoot DOMAIN ('XMLNSC');
		SET OutputRoot.XMLNSC.GetUserEstablishmentsHRSDRq.Header = InHeaderRef;
		DECLARE OutHeaderRef REFERENCE TO OutputRoot.XMLNSC.GetUserEstablishmentsHRSDRq.Header;
		CREATE LASTCHILD OF OutputRoot.XMLNSC.GetUserEstablishmentsHRSDRq NAME 'Body';
		DECLARE OutBodyRef REFERENCE TO OutputRoot.XMLNSC.GetUserEstablishmentsHRSDRq.Body;
		-- prepare body
		SET OutBodyRef.IdNumber = InBodyRef.IdNo;
		SET OutBodyRef.LaborerOfficeId = InBodyRef.LaborOfficeId;
		SET OutBodyRef.SequenceNumber = InBodyRef.SequanceNumber;
		
		SET Environment.InternalServiceCaller.callCorrIDOffset = '21';
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
