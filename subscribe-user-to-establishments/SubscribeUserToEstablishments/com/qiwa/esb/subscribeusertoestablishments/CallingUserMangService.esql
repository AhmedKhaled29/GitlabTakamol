BROKER SCHEMA com.qiwa.esb.subscribeusertoestablishments
PATH Qiwa.Framework.Lib;


CREATE COMPUTE MODULE CallingUserMangService
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE bodyRef REFERENCE TO Environment.Variables.Body;
		DECLARE rInputHeader REFERENCE TO Environment.Variables.Header;
		DECLARE channel CHAR Environment.Properties.subscribeUserToEstablishments.subscribeUserToEstablishmentsFlow.Variables.ChannelId;
		DECLARE code CHAR Environment.Properties.subscribeUserToEstablishments.subscribeUserToEstablishmentsFlow.Variables.CodeMang;		   



		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;		


		CREATE FIELD OutputRoot.XMLNSC.GetUserManagementServicesRq.Header;
		DECLARE rOutputHeader REFERENCE TO OutputRoot.XMLNSC.GetUserManagementServicesRq.Header;
		SET rOutputHeader = rInputHeader;

		CREATE FIELD OutputRoot.XMLNSC.GetUserManagementServicesRq.Body;
		DECLARE outRef REFERENCE TO OutputRoot.XMLNSC.GetUserManagementServicesRq.Body;

		SET rOutputHeader.ServiceCode = code ;
		SET rOutputHeader.ChannelId = channel;

		SET Environment.InternalServiceCaller.callCorrIDOffset = SUBSTRING(rInputHeader.TransactionId FROM 1 FOR 1) || '5';

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;