BROKER SCHEMA com.qiwa.esb.addorterminateusersubsription
PATH Qiwa.Framework.Lib; 


CREATE COMPUTE MODULE AddOrTerminateUserSubsriptionFlow_CallDB
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD  = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2  = Environment.Variables.MQRFH2;
		
		-- build the response structure 
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.UpdateOrTerminateUserSubscriptionRs  NAME 'Header';
		CREATE LASTCHILD OF OutputRoot.XMLNSC.UpdateOrTerminateUserSubscriptionRs  NAME 'Body'; 

	    DECLARE zero CHAR Environment.Properties.UpdateOrTerminateUserSubscription.UpdateOrTerminateUserSubscriptionFlow.Variables.zero;
	    DECLARE two CHAR Environment.Properties.UpdateOrTerminateUserSubscription.UpdateOrTerminateUserSubscriptionFlow.Variables.two; 
	    DECLARE one CHAR Environment.Properties.UpdateOrTerminateUserSubscription.UpdateOrTerminateUserSubscriptionFlow.Variables.one; 
	    DECLARE Invalidexpiry CHAR Environment.Properties.UpdateOrTerminateUserSubscription.UpdateOrTerminateUserSubscriptionFlow.Variables.InvalidDate; 
	    DECLARE InvalidSub CHAR Environment.Properties.UpdateOrTerminateUserSubscription.UpdateOrTerminateUserSubscriptionFlow.Variables.InvalidSub; 

	     
		DECLARE Inbody REFERENCE TO Environment.Variables.XMLNSC.UpdateOrTerminateUserSubscriptionRq.Body;  
		DECLARE reqHeaderRef REFERENCE TO Environment.Variables.XMLNSC.UpdateOrTerminateUserSubscriptionRq.Header;
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.UpdateOrTerminateUserSubscriptionRs.Header; 
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC.UpdateOrTerminateUserSubscriptionRs.Body;
		
		
		
		
		DECLARE result INT ;
		DECLARE UserID INT Environment.Variables.XMLNSC.UpdateOrTerminateUserSubscriptionRq.Body.UserId; 
		DECLARE IdNo CHAR Environment.Variables.XMLNSC.UpdateOrTerminateUserSubscriptionRq.Body.IdNo;
		DECLARE ActionType INT Environment.Variables.XMLNSC.UpdateOrTerminateUserSubscriptionRq.Body.ActionType;
		
		DECLARE ExpiryDate CHAR Environment.Variables.XMLNSC.UpdateOrTerminateUserSubscriptionRq.Body.SubscriptionExpiryDate; 
		DECLARE pattern CHAR 'yyyy-MM-dd' ;--2019-12-04T18:29:24.293
		DECLARE expiry DATE ;
        SET expiry = CAST(ExpiryDate AS TIMESTAMP FORMAT pattern);
		--DECLARE ExpiryDate CHAR Environment.Variables.XMLNSC.UpdateOrTerminateUserSubscriptionRq.Body.SubscriptionExpiryDate; 
		--DECLARE ExpiryDate DATE CURRENT_DATE; 
		-- create xml 
		DECLARE EstablishmentsList CHAR; 
		Create FIRSTCHILD of Environment DOMAIN 'XMLNSC' Name 'xml';
		IF EXISTS ( Environment.Variabl.NonEligibleEst[]) THEN  
		 	--SET UsersSubscriptionList value 
			SET Environment.xml.EstablishmentsList = Environment.Variabl.NonEligibleEst.EstablishmentsList; 
	        --Pars UsersSubscriptionList object to XMl object
			SET Environment.xml.EstablishmentsList = CAST(ASBITSTREAM(Environment.xml CCSID 1208 ) AS CHARACTER CCSID 1208);
	        SET EstablishmentsList = CAST( Environment.xml.EstablishmentsList AS CHARACTER );
		ELSE 
			SET EstablishmentsList = NULL ;
		END IF; 	     
		 
		CALL UpdateOrTerminateUserSubscription( 
												  UserID, 
												  IdNo,
												  EstablishmentsList, 
												  ActionType,
												  expiry ) INTO result;  
												  
	    IF 	result = zero THEN 
	    	CALL Create_esbXML_Response_Header(GetESBSuccessCode(),reqHeaderRef,rOutHeaderRef);
	    ELSEIF result = one THEN  
	    	CALL Create_esbXML_Response_Header(InvalidSub,reqHeaderRef,rOutHeaderRef); 
	    ELSEIF result = two THEN 
	    	CALL Create_esbXML_Response_Header(Invalidexpiry,reqHeaderRef,rOutHeaderRef); 
	    END IF; 	
	    											  
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
	
	CREATE PROCEDURE UpdateOrTerminateUserSubscription(   IN UserID INT ,
						 								  IN IdNo CHAR ,
						 								  IN EstablishmentList CHAR ,
						 								  IN ActionType INT,  
						 								  IN ExpiryDate DATE) 
	RETURNS INTEGER LANGUAGE DATABASE 
    EXTERNAL NAME "dbo.UpdateOrTerminate_UserSubscription";
	
	
END MODULE;
