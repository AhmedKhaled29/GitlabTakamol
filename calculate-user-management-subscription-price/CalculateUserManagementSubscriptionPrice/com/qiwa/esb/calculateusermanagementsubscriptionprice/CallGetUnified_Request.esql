BROKER SCHEMA com.qiwa.esb.calculateusermanagementsubscriptionprice
PATH Qiwa.Framework.Lib;


CREATE COMPUTE MODULE CallGetUnified_Request
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		
		--save the input message and headers
		SET Environment.Variables.Properties = InputRoot.Properties;
		SET Environment.Variables.MQMD = InputRoot.MQMD;
		SET Environment.Variables.MQRFH2 = InputRoot.MQRFH2;
		SET Environment.Variables.XMLNSC = InputRoot.XMLNSC;
		SET Environment.Variables.Request = InputRoot.XMLNSC.CalculateUserManagementSubscriptionPriceRq;		
		
		--reference to request header and body
		DECLARE InHeaderRef REFERENCE TO InputRoot.XMLNSC.CalculateUserManagementSubscriptionPriceRq.Header;
		DECLARE InBodyRef REFERENCE TO InputRoot.XMLNSC.CalculateUserManagementSubscriptionPriceRq.Body;
		
		--Declare properties file
		DECLARE loadproperties REFERENCE TO Environment.Properties.CalculateUserManagementSubscriptionPrice.CalculateUserManagementSubscriptionPriceFlow.Variables;
		
		 
	
		-- prepare call to GetUniNoTotLabCountHRSD
		CREATE LASTCHILD OF OutputRoot DOMAIN ('XMLNSC');
		SET OutputRoot.XMLNSC.GetUnifiedNumbertTotalLaborersCountMLSDRq.Header = InHeaderRef;
		DECLARE OutHeaderRef REFERENCE TO OutputRoot.XMLNSC.GetUnifiedNumbertTotalLaborersCountMLSDRq.Header;
		CREATE LASTCHILD OF OutputRoot.XMLNSC.GetUnifiedNumbertTotalLaborersCountMLSDRq NAME 'Body';
		DECLARE OutBodyRef REFERENCE TO OutputRoot.XMLNSC.GetUnifiedNumbertTotalLaborersCountMLSDRq.Body;
		-- prepare body
		SET OutBodyRef.LaborOfficeId = InBodyRef.LaborOfficeId;
		SET OutBodyRef.SequenceNumber = InBodyRef.EstablishmentSequence;
		-- SET OutBodyRef.ExcludeEconomicActivities = loadproperties.EconomicActivities;
		SET OutBodyRef.PageIndex = 1; 
		SET OutBodyRef.PageSize = 1;
			
	
			SET Environment.InternalServiceCaller.callCorrIDOffset = '16';	
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
