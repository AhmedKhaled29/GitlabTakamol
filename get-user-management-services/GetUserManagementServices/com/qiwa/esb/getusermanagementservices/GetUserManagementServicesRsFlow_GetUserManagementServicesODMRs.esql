BROKER SCHEMA com.qiwa.esb.getusermanagementservices
PATH Qiwa.Framework.Lib; 


CREATE COMPUTE MODULE GetUserManagementServicesRsFlow_GetUserManagementServicesODMRs
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
	    CALL CopyMessageHeaders();
		DECLARE inMSGRef REFERENCE TO InputRoot.XMLNSC.GetUserManagementServicesRs ;
		DECLARE inBodyRef REFERENCE TO inMSGRef.Body.*:*[<].*:*[<].*[<];
		CREATE LASTCHILD OF OutputRoot.XMLNSC.GetUserManagementServicesRs NAME 'Body';
		DECLARE outMSGRef REFERENCE TO OutputRoot.XMLNSC.GetUserManagementServicesRs.Body; 
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.GetUserManagementServicesRs NAME 'Header'; 
		SET OutputRoot.XMLNSC.GetUserManagementServicesRs.Header = inMSGRef.Header; 
		IF inMSGRef.Header.ResponseStatus.Code = GetESBSuccessCode() THEN  
			DECLARE a INT 1;
	    	DECLARE CountError INT CARDINALITY(inBodyRef.ServicesList.ServiceItem[]); 
	    	WHILE a <= CountError DO
	    		
		         SET outMSGRef.ServicesList.ServiceItem[a].GroupId = inBodyRef.ServicesList.ServiceItem[a].GroupID;
		         SET outMSGRef.ServicesList.ServiceItem[a].GroupNameEn = inBodyRef.ServicesList.ServiceItem[a].GroupNameEn;
		         SET outMSGRef.ServicesList.ServiceItem[a].GroupNameAr = inBodyRef.ServicesList.ServiceItem[a].GroupNameAr; 
		         SET outMSGRef.ServicesList.ServiceItem[a].ServiceId = inBodyRef.ServicesList.ServiceItem[a].ServiceID;
		         SET outMSGRef.ServicesList.ServiceItem[a].ServiceNameEn = inBodyRef.ServicesList.ServiceItem[a].ServiceNameEn;
		         SET outMSGRef.ServicesList.ServiceItem[a].ServiceNameAr = inBodyRef.ServicesList.ServiceItem[a].ServiceNameAr;
		         SET outMSGRef.ServicesList.ServiceItem[a].Subscription = inBodyRef.ServicesList.ServiceItem[a].Subscription;
	            SET a = a+1;
		    END WHILE;
		END IF;
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
