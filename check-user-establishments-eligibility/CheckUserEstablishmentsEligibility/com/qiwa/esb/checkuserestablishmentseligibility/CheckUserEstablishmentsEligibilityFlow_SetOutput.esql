BROKER SCHEMA com.qiwa.esb.checkuserestablishmentseligibility
PATH Qiwa.Framework.Lib;  


CREATE COMPUTE MODULE CheckUserEstablishmentsEligibilityFlow_SetOutput
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
         
        SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD  = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2  = Environment.Variables.MQRFH2;
		
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.CheckUserEstablishmentsEligibilityRs  NAME 'Header';
		CREATE LASTCHILD OF OutputRoot.XMLNSC.CheckUserEstablishmentsEligibilityRs  NAME 'Body'; 

		--DECLARE Invalid CHAR Environment.Properties.CalculateEstablishmentQuota.CalculateEstablishmentQuota.Variables.NotValid;   
		DECLARE Inbody REFERENCE TO Environment.Variables.XMLNSC.CheckUserEstablishmentsEligibilityRq.Body;  
		DECLARE reqHeaderRef REFERENCE TO Environment.Variables.XMLNSC.CheckUserEstablishmentsEligibilityRq.Header;
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.CheckUserEstablishmentsEligibilityRs.Header; 
		DECLARE OutRef REFERENCE TO OutputRoot.XMLNSC.CheckUserEstablishmentsEligibilityRs.Body;
	    DECLARE loadProperties CHAR Environment.Properties.CheckUserEstablishmentsEligibility.CheckUserEstablishmentsEligibilityFlow.Variables.Ask_Owner;
		 
		DECLARE loopOn INT Environment.var.codeValue;
        DECLARE i INT 1; 
		          
         WHILE i <= loopOn DO 
         	SET OutRef.EligibleEstablishments.EligibleEstablishmentsItem[i].LaborOfficeId = Environment.Variables.XMLNSC.CheckUserEstablishmentsEligibilityRq.Body.EstablishmentsList.EstablishmentsItem[i].LaborOfficeId;
			SET OutRef.EligibleEstablishments.EligibleEstablishmentsItem[i].EstablishmentSequence =Environment.Variables.XMLNSC.CheckUserEstablishmentsEligibilityRq.Body.EstablishmentsList.EstablishmentsItem[i].EstablishmentSequence;
         SET i =i+1;
         END WHILE; 	 
         CALL Create_esbXML_Response_Header(GetESBSuccessCode(),reqHeaderRef,rOutHeaderRef);  
         
         IF  Environment.Var.errorNoMlsdData = 1 THEN    
         	CALL Create_esbXML_Response_Header(loadProperties,reqHeaderRef,rOutHeaderRef); 
         END IF; 
         
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
