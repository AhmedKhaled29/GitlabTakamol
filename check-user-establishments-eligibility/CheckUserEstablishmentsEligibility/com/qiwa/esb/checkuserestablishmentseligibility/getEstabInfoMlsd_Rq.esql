BROKER SCHEMA com.qiwa.esb.checkuserestablishmentseligibility


CREATE COMPUTE MODULE getEstabInfoMlsd_Rq
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		
		
		SET OutputRoot.Properties = Environment.Variables.Properties;
		SET OutputRoot.MQMD = Environment.Variables.MQMD;
		SET OutputRoot.MQRFH2 = Environment.Variables.MQRFH2;
		
		
		
		DECLARE size INT CARDINALITY (Environment.Variabl.allDataMlsds.item[]); 
		DECLARE i INT 2 ;
        DECLARE EstablishmentIdsList CHAR ; 
       
 		  	  
--		 IF EXISTS(Environment.Variabl.allDataMlsds.item[]) THEN 
--		 	  DECLARE EstabIds CHAR CAST (Environment.Variabl.allDataMlsds.item[1].EstablishmentId AS CHAR);  
--			  DECLARE allData INT CARDINALITY (Environment.Variabl.allDataMlsds.item[]);
--			 	
--				WHILE i<=allData DO
--				   
--				   DECLARE dataRef REFERENCE TO Environment.Variabl.allDataMlsds.item[i]; 
--			       SET EstabIds =CAST ( EstabIds || ',' || CAST ( dataRef.EstablishmentId AS CHAR) AS CHAR); 
--			       SET i = i+1;
--				END WHILE;        
--			    
----			    IF  allData > 1  THEN       
-- 	          	SET  EstablishmentIdsList  =EstabIds;--'169611,173744,1053655,1053775,1075121,1075760,1351923,1368049,1406101,1407749,1529470,1563143'; --EstabIds;      			
----			    ELSE  
----			       SET EstablishmentId = EstabIds;  
----			    END IF; 
--				    
--		 END IF;
		 
		 SET OutputRoot.XMLNSC.data.EstablishmentIds = TRIM(',' FROM Environment.Variabl.allDataMlsds); 
		 
		 
		 
		 
		 
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
