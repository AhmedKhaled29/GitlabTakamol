BROKER SCHEMA com.qiwa.esb.createuser
PATH Qiwa.Framework.Lib;     

CREATE COMPUTE MODULE CreateUserFlow_Preparing_msg
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
        -- creating the response structure "header and body"
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		CREATE FIRSTCHILD OF OutputRoot.XMLNSC.CreateUserRs  NAME 'Header'; 
		CREATE LASTCHILD OF OutputRoot.XMLNSC.CreateUserRs  NAME 'Body';    
		-- creating refrences for the header and body of the response  
		DECLARE loadedPropertiesRef REFERENCE TO Environment.Properties.CreateUser.CreateUserFlow.Variables; 
		DECLARE rOutHeaderRef REFERENCE TO OutputRoot.XMLNSC.CreateUserRs.Header; 
		DECLARE rInputHeader REFERENCE TO InputRoot.XMLNSC.CreateUserRq.Header;     
		DECLARE rInputBody REFERENCE TO InputRoot.XMLNSC.CreateUserRq.Body;    
		-- declaring all variables sent in the request 
		DECLARE IdNo CHAR rInputBody.IdNo;  
		DECLARE Name  CHAR rInputBody.Name;      
		DECLARE DateOfBirth  INT rInputBody.DateOfBirth;  
		DECLARE Email CHAR rInputBody.Email ; 
		DECLARE Phone  CHAR rInputBody.MobileNumber ;  
		DECLARE UserID INT rInputBody.UserId;  
		DECLARE StatusId  INT rInputBody.StatusId;      
		DECLARE NationalityID  INT rInputBody.NationalityId ; 
		DECLARE GenderId INT rInputBody.GenderId ; 
		DECLARE ReligionId  INT rInputBody.ReligionId ;  
	    DECLARE IDExpiryDate CHAR rInputBody.IdExpiryDate;   
		DECLARE UserName  CHAR rInputBody.UserName;   
		DECLARE Password  CHAR rInputBody.Password;    
		DECLARE IsEmailVerified BOOLEAN rInputBody.IsEmailVerified ; 
		DECLARE Result INT;  
		
		IF ((rInputBody.IsEmailVerified IS NULL) OR (rInputBody.IsEmailVerified = '')) AND (LENGTH(rInputBody.Email)>0)THEN   
			CALL Create_esbXML_Response_Header(loadedPropertiesRef.MissingParameter,rInputHeader,rOutHeaderRef);	 
			RETURN TRUE;
		END IF;     
		-- calling the Create_User procedure   
		SET Result = Create_User  ( IdNo,  
									Name, 
									DateOfBirth,
									Email,
									Phone ,
									UserID, 
									StatusId,
									NationalityID,
									GenderId,
									ReligionId,
									IDExpiryDate,
									UserName,
									Password,
									IsEmailVerified );  
			
	    -- if the user was created 
		IF Result = 0 THEN   
			
			CALL Create_esbXML_Response_Header(GetESBSuccessCode(),rInputHeader,rOutHeaderRef);  
	
		  ELSE 
			-- if was not created will show an error  
			CALL Create_esbXML_Response_Header(loadedPropertiesRef.NoData_Error,rInputHeader,rOutHeaderRef);
		
		END IF;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.[I] = InputRoot.[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END; 
	
	 -- the procedure that is called to Create the requested user  
	  CREATE PROCEDURE Create_User (IN IdNo CHARACTER, 
									IN Name CHARACTER,
									IN DateOfBirth INTEGER,
									IN Email CHARACTER,
									IN Phone CHARACTER,
									IN UserID INTEGER, 
									IN StatusId INTEGER, 
									IN NationalityID INTEGER,
									IN GenderId INTEGER,
									IN ReligionId INTEGER,
									IN IDExpiryDate CHARACTER,
									IN UserName CHARACTER, 
									IN Password CHARACTER, 
									IN IsEmailVerified BOOLEAN  ) 											 
	RETURNS INTEGER LANGUAGE DATABASE EXTERNAL NAME "dbo.Create_User";  

END MODULE;